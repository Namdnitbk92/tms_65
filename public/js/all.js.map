{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["var appBuilder = function () {\n\n    this.tooltip = function (configs) {\n        if (_.isNull(configs) || _.isUndefined(configs)) {\n            return;\n        } else {\n            for (var k in configs) {\n                var config = configs[k];\n                var element = config.element ? config.element : null;\n                if (_.isNull(element)) {\n                    return;\n                }\n\n                if (_.isFunction(element.popup)) {\n                    element.popup({\n                        position: config.position ? config.position : 'right center',\n                        content: config.content ? config.content : ''\n                    })\n                }\n            }\n        }\n    };\n\n    this.animate = function (configs) {\n        for (var k in configs) {\n            var config = configs[k];\n            var animate = config.animate ? config.animate : null;\n            if (_.isNull(animate)) {\n                continue;\n            } else {\n                var callback = config.callack ? config.callback : undefined;\n                if (_.isUndefined(callback)) {\n                    setTimeout(function () {\n                        animate.transition(config.animateName);\n                    }, 400);\n                } else {\n                    callback();\n                }\n            }\n        }\n    }\n\n    this.utils = new function () {\n        var parent = this;\n        /*format data send ajax from serialize data*/\n        var processData = function (data) {\n            if (_.contains(data, '&')) {\n                data = data.split('&');\n                var obj = {};\n                for (var k in data) {\n                    if (_.contains(data[k], '=')) {\n                        var temp = data[k].split('=');\n                        if (Array.isArray(temp)) {\n                            obj[temp[0]] = temp[1];\n                        }\n                    }\n                }\n                return obj;\n            }\n            ;\n            return data;\n        };\n        /*common method send request with ajax*/\n        this.sendData = function (config) {\n            var request = $.ajax({\n                url: config.url ? config.url : '',\n                data: config.data ? config.data : null,\n                dataType: config.dataType ? config.dataType : 'json',\n                type: config.method ? config.method : 'POST',\n                beforeSend: config.beforeSend ? config.beforeSend : function () {\n                }\n            });\n\n            request.done(function (res) {\n                if (typeof config.callback === 'function') {\n                    config.callback(res);\n                }\n            })\n        };\n\n        this.loading = function (action, delay) {\n            var _loading = $('.loadingArea');\n            var _delay = delay ? delay : 1;\n            if (action === 'show') {\n                _loading.show(_delay);\n            } else {\n                _loading.hide(_delay);\n            }\n        };\n\n        this.isset = function (val) {\n            return !_.isUndefined(val) && !_.isNull(val);\n        };\n\n        this.redirect = function (url) {\n            if (_.isNull(url) || _.isUndefined(url))\n                return;\n            window.open(url, '_blank');\n        };\n    };\n\n    this.bindEvent = function (callback) {\n        return _.isFunction(callback) ? callback() : function () {\n        };\n    }\n\n};\n\n/*init Component*/\nvar loginBuilder = (function (appBuilder) {\n    var appLogin = new appBuilder();\n\n    return {\n        tooltip: function () {\n            var configs = [\n                {\n                    element: $('input[name=\"password\"]'),\n                    content: 'Please enter password to login with your\"s account',\n                },\n                {\n                    element: $('input[name=\"email\"]'),\n                    content: 'Please enter email to login with your\"s account',\n                },\n            ];\n            appLogin.tooltip(configs);\n        },\n        animate: function () {\n            appLogin.animate([{\n                animate: $('.navbar-header'),\n                animateName: 'jiggle'\n            }]);\n        },\n        bindEvent: function () {\n            var btnLogin = $('.btn-login');\n            if (!_.isEmpty(btnLogin)) {\n                btnLogin.click(function (event) {\n                    var _form = $('.form-login');\n                    appLogin.utils.loading('show');\n                    appLogin.utils.sendData({\n                        url: 'login',\n                        data: _form.serialize()\n                    });\n                });\n            }\n        },\n        build: function () {\n            this.tooltip();\n            this.animate();\n            this.bindEvent();\n        }\n    }\n\n}(appBuilder))\n\nvar courseBuilder = (function () {\n    var course = new appBuilder();\n\n    return {\n        tooltip: function () {\n            var configs = [\n                {\n                    element: $('.add-course'),\n                    position: 'top center',\n                    content: 'Add New Course'\n                },\n                {\n                    element: $('.del-course-multi'),\n                    position: 'top center',\n                    content: 'Delete Course Selected'\n                },\n                {\n                    element: $('.btn-excel'),\n                    position: 'top center',\n                    content: 'Export Excel'\n                },\n                {\n                    element: $('.btn-csv'),\n                    position: 'top center',\n                    content: 'Export CSV'\n                },\n            ];\n            course.tooltip(configs);\n        },\n        animate: function () {\n            course.animate([{\n                animate: $('.body-content'),\n                animateName: 'shake'\n            }]);\n        },\n        bindEvent: function () {\n            $('form[id=\"delRoute\"]').submit(function (e) {\n                e.preventDefault();\n            });\n            var input_all = $('input[name=\"select-all\"]');\n            input_all.change(function () {\n                var check = input_all.prop('checked');\n                var all_input = $('input[type=\"checkbox\"]');\n                if (check) {\n                    all_input.prop('checked', true);\n                } else {\n                    all_input.prop('checked', false);\n                }\n            });\n\n            $('.btn-confirm').click(function () {\n                var selected = localStorage.getItem('selected');\n                var courses = localStorage.getItem('courseList');\n                courses = JSON.parse(courses);\n                var input = $('input[name=\"select-all\"]');\n                var checkboxs = $('input[type=\"checkbox\"]');\n                if(input.prop('checked') && checkboxs.length > 1) {\n                    var courses = [];\n                    for (var i = 0;i < checkboxs.length;i++) {\n                        var element = $(checkboxs[i]);\n                        if(element.attr('name') !== 'select-all') {\n                            courses.push(element.val());\n                        }\n                    }\n                }\n                if (!course.utils.isset(selected) && courses !== undefined) {\n                    $.ajax({\n                        url: 'destroySelected',\n                        data: {\n                            ids: courses\n                        },\n                        type: 'POST',\n                        beforeSend: function () {\n                            $('#confirmModal').modal('hide');\n                            course.utils.loading('show');\n                        }\n                    }).done(function (res) {\n                        setTimeout(function () {\n                            for (var c in courses) {\n                                $('tr.row-' + parseInt(courses[c])).addClass('hide');\n                            }\n                            localStorage.clear();\n                            course.utils.loading('hide');\n                            $('.result-msg').show(1000);\n                            $('.result-msg-content').text('Delete Courses Success!');\n                            setTimeout(function () {\n                                $('.result-msg').hide(1000);\n                            }, 2000);\n                        }, 400)\n                    });\n                } else {\n                    var formName = 'delRoute' + selected;\n                    var _form = $('form[name=\"' + formName + '\"]');\n                    _form.unbind('submit');\n                    _form.submit();\n                }\n            });\n\n            $('.del-course').click(function () {\n                $('#confirmModal').modal('show');\n            });\n\n            $('.prompt').change(function () {\n                course.utils.loading('show');\n                $('input[name=\"term\"]').val($('.prompt').val());\n                setTimeout(function () {\n                    $('form[name=\"search\"]').submit();\n                }, 500);\n            });\n\n            $('#confirmModal').on('hidden.bs.modal', function () {\n                $('.modal-body').text('Are you sure?');\n                localStorage.removeItem('selected');\n                $('.btn-confirm').prop('disabled', false);\n            });\n\n            $('.del-course-multi').click(function () {\n                var courses = localStorage.getItem('courseList');\n                var checkall = $('input[name=\"select-all\"]').prop('checked');\n                if ((_.isUndefined(courses) || _.isNull(courses)) && !checkall) {\n                    $('.modal-body').text('Please select courses before delete!');\n                    $('.btn-confirm').prop('disabled', true);\n                    $('#confirmModal').modal('show');\n                    return;\n                } else {\n                    $('#confirmModal').modal('show');\n                }\n            });\n\n            $('.dropdown-entry').change(function () {\n                course.utils.loading('show');\n                $('input[name=\"entry\"]').val($('.dropdown-entry').val());\n                $('form[name=\"show-entry\"]').submit();\n            });\n\n            $('input[name=\"elementAll\"]').click(function () {\n                var check = $('input[name=\"elementAll\"]').prop('checked');\n                var input = $('input[type=\"checkbox\"]');\n                var data = [];\n                for (var i = 0; i < input.length; i++) {\n                    if (input[i].hasAttribute('element')) {\n                        data.push($(input[i]).val());\n                    }\n                }\n                if (check) {\n                    $(input).prop('checked', true);\n                    $('input[name=\"subjectData\"]').val(data);\n                } else {\n                    $(input).prop('checked', false);\n                    $('input[name=\"subjectData\"]').val('');\n                }\n            })\n\n            $('form[name=\"CI\"]').submit(function (e) {\n                e.preventDefault();\n            })\n\n            $('.btn-ci').click(function () {\n                $('form[name=\"CI\"]').unbind('submit');\n                var input = $('input[type=\"checkbox\"]');\n                var data = [];\n                for (var i = 0; i < input.length; i++) {\n                    var isCheck = $(input[i]).prop('checked');\n                    if (isCheck && input[i].hasAttribute('element')) {\n                        data.push($(input[i]).val());\n                    }\n                }\n                $('input[name=\"subjectData\"]').val(data);\n                $('form[name=\"CI\"]').submit();\n            });\n            (function () {\n                var input = $('input[type=\"checkbox\"]');\n                for (var i = 0; i < input.length; i++) {\n                    if (input[i].hasAttribute('element')) {\n                        var _input = $(input[i]);\n                        if (_input.attr('belongCourse') == \"true\") {\n                            _input.prop('checked', true);\n                        } else continue;\n                    }\n                }\n            }())\n        },\n        saveSelect: function (id) {\n            localStorage.setItem('selected', id);\n        },\n        del: function (id) {\n            var formName = 'delRoute' + id;\n            $('form[name=' + formName + ']').submit();\n        },\n        saveStorage: function (id) {\n            var checked = $('input[name=\"radio-' + id + '\"]').prop('checked');\n            var list = localStorage.getItem('courseList');\n            list = _.isUndefined(list) || _.isNull(list) ? null : JSON.parse(list);\n            if (_.isArray(list) && !_.isEmpty(list)) {\n                var find = _.find(list, function (element) {\n                    return id === element;\n                });\n                if (find === undefined) {\n                    if (checked) {\n                        list.push(id);\n                    }\n                    localStorage.setItem('courseList', JSON.stringify(list));\n                } else {\n                    if (!checked) {\n                        var index = _.indexOf(list, \"\" + id);\n                        list.splice(index, 1);\n                        localStorage.setItem('courseList', JSON.stringify(list));\n                    }\n                }\n            } else {\n                if (checked) {\n                    localStorage.setItem('courseList', JSON.stringify([id]));\n                }\n            }\n        },\n        utils: function () {\n            return course.utils;\n        },\n        build: function () {\n            localStorage.clear();\n            this.tooltip();\n            this.animate();\n            this.bindEvent();\n        }\n    }\n\n}(appBuilder))\n\n$(document).ready(function () {\n    $.ajaxSetup({\n        headers: {'X-CSRF-Token': $('meta[name=_token]').attr('content')}\n    });\n    loginBuilder.build();\n    courseBuilder.build();\n})\n"],"sourceRoot":"/source/"}